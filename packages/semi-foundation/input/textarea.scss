@use "sass:meta";
@use "animation.scss";
@use "variables.scss";

$module: #{$prefix}-input;


.#{$module}-textarea-wrapper {
    box-sizing: border-box;
    display: inline-block;
    position: relative;
    width: 100%;
    border: variables.$width-input_wrapper-border variables.$color-input_default-border-default solid;
    border-radius: variables.$radius-input_wrapper;
    vertical-align: bottom;
    background-color: variables.$color-input_default-bg-default;
    transition: background-color animation.$transition_duration-input-bg animation.$transition_function-input-bg animation.$transition_delay-input-bg,
    border animation.$transition_duration-input-border animation.$transition_function-input-border animation.$transition_delay-input-border;

    &:hover {
        background-color: variables.$color-input_default-bg-hover;
    }

    &-focus {
        background-color: variables.$color-input_default-bg-focus;
        border: variables.$width-input_wrapper_focus-border variables.$color-input_default-border-focus solid;
        &:hover,
        &:active {
            background-color: variables.$color-input_default-bg-focus;
        }
    }

    &:active {
        background-color: variables.$color-input_default-bg-active;
    }

    .#{$module}-clearbtn {
        position: absolute;
        top: 0;
        min-width: variables.$width-textarea-icon;
        color: variables.$color-textarea-icon-default;
        right: variables.$spacing-textarea-icon-right;
        height: variables.$height-textarea-default;

        & > svg {
            pointer-events: none;
        }

        &:hover {
            cursor: pointer;

            .#{$prefix}-icon {
                color: variables.$color-textarea-icon-hover;
            }
        }

        &-hidden {
            visibility: hidden;
        }
    }

    &-disabled, &-readonly {
        cursor: not-allowed;
        // border: $border-thickness-control $color-input_disabled-border-default solid;
        color: variables.$color-input_disabled-text-default;
        background-color: variables.$color-input_disabled-bg-default;

        &:hover {
            background-color: variables.$color-input_disabled-bg-default;
        }

        &::placeholder {
            color: variables.$color-input_disabled-text-default;
        }
    }

    &-readonly {
        cursor: text;
    }

    &-error {
        background-color: variables.$color-input_danger-bg-default;
        border-color: variables.$color-input_danger-border-default;

        &:hover {
            background-color: variables.$color-input_danger-bg-hover;
            border-color: variables.$color-input_danger-border-hover;
        }

        &.#{$module}-textarea-wrapper-focus {
            background-color: variables.$color-input_danger-bg-focus;
            border-color: variables.$color-input_danger-border-focus;
        }

        &:active {
            background-color: variables.$color-input_danger-bg-active;
            border-color: variables.$color-input_danger-border-focus;
        }
    }

    &-warning {
        background-color: variables.$color-input_warning-bg-default;
        border-color: variables.$color-input_warning-border-default;

        &:hover {
            background-color: variables.$color-input_warning-bg-hover;
            border-color: variables.$color-input_warning-border-hover;
        }

        &.#{$module}-textarea-wrapper-focus {
            background-color: variables.$color-input_warning-bg-focus;
            border-color: variables.$color-input_warning-border-focus;
        }

        &:active {
            background-color: variables.$color-input_warning-bg-active;
            border-color: variables.$color-input_warning-border-focus;
        }
    }

    // &-resize {
    //     resize: vertical;
    //     overflow: auto;

    //     .#{$module}-textarea {
    //         min-height: 52px;
    //         height: calc(100% - 24px);
    //     }
    // }
}

.#{$module}-textarea {
    position: relative;
    resize: none;
    // min-height: $height-input_default;
    padding: variables.$spacing-textarea-paddingY variables.$spacing-textarea-paddingX;

    @include shadow-0;
    @include font-size-regular;
    background-color: transparent;
    border: variables.$width-textarea-border solid variables.$color-textarea-border-default;
    vertical-align: bottom;
    width: 100%;
    outline: none;
    cursor: text;
    box-sizing: border-box;
    color: variables.$color-input_default-text-default;

    &:hover {
        border-color: variables.$color-textarea-border-hover;
    }

    &::placeholder {
        color: variables.$color-input_placeholder-text-default;
    }

    &-showClear {
        padding-right: variables.$spacing-textarea_withShowClear-paddingRight;
    }

    &-disabled, &-readonly {
        cursor: not-allowed;
        color: variables.$color-input_disabled-text-default;
        background-color: transparent;

        &:hover {
            background-color: transparent;
        }

        &::placeholder {
            color: variables.$color-input_disabled-text-default;
        }
    }

    &-readonly {
        cursor: text;
    }

    &-autosize {
        overflow: hidden;
    }

    &-counter {
        @include font-size-small;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: variables.$spacing-textarea_counter-paddingTop variables.$spacing-textarea_counter-paddingRight variables.$spacing-textarea_counter-paddingBottom variables.$spacing-textarea_counter-paddingLeft;
        min-height: variables.$height-textarea_counter;
        text-align: right;
        color: variables.$color-input_counter-text-default;

        &-exceed {
            color: variables.$color-input_counter_danger-text-default;
        }
    }
}

.#{$module}-textarea-borderless{
    &:not(:focus-within):not(:hover){
        background-color:transparent;
        border-color: transparent;
    }

    &:focus-within:not(:active){
        background-color:transparent;
    }

    &.#{$module}-textarea-wrapper-error:not(:focus-within){
        border-color: variables.$color-input_danger-border-focus;
    }



    &.#{$module}-textarea-wrapper-warning:not(:focus-within){
        border-color: variables.$color-input_warning-border-focus;
    }

    &.#{$module}-textarea-wrapper-error{
            .#{$module}-textarea-counter{
                color: variables.$color-input_danger-border-focus;
            }
    }

    &.#{$module}-textarea-wrapper-warning{
        .#{$module}-textarea-counter{
            color: variables.$color-input_warning-border-focus;
        }
    }

}

@include meta.load-css("rtl.scss");
