@use "sass:meta";
@use "animation.scss";
@use "variables.scss";

$module: #{$prefix}-toast;
$icon: #{$prefix}-toast-icon;

.#{$module} {
    pointer-events: none;

    &-wrapper {
        position: fixed;
        height: 0;
        top: variables.$spacing-toast_wrapper-top;
        width: variables.$width-toast_wrapper;
        display: flex;
        justify-content: center;
        z-index: $z-toast;
        .#{$module}-innerWrapper{
            width: fit-content;
            height: fit-content;
            text-align: center;
            &-hover{
                .#{$module}-zero-height-wrapper{
                    perspective: unset;
                    perspective-origin: center center;
                }
            }
        }


    }


    &-zero-height-wrapper{
        transition: all animation.$animation_duration-toast-stack animation.$animation_function-toast-stack;
        perspective-origin: center variables.$spacing-toast-perspective-originY; ;
        perspective: variables.$spacing-toast-perspective;
        height: 0;
        overflow: visible;
    }


    &-content {
        pointer-events: all;
        @include shadow-elevated;
        @include font-size-regular;
        background-color: variables.$color-toast-bg-default;
        border-radius: variables.$radius-toast_content;
        padding: variables.$spacing-toast_content-paddingTop variables.$spacing-toast_content-paddingRight variables.$spacing-toast_content-paddingBottom variables.$spacing-toast_content-paddingLeft;
        display: inline-flex;
        align-items: flex-start;
        justify-content: center;
        margin: variables.$spacing-toast_content-margin;
        font-weight: variables.$font-toast_content-fontWeight;
        color: variables.$color-toast-text-default;

        .#{$module}-close-button {
            margin-top: variables.$spacing-toast_content_close_btn-marginTop;
            height: $width-icon-large;
        }

        .#{$module}-content-text {
            margin-left: variables.$spacing-toast_content_text-marginLeft;
            margin-right: variables.$spacing-toast_content_text-marginRight;
            text-align: left;
            // word-wrap is an alias of overflow-wrap, word-wrap can take effect on more browsers, in order to prevent future changes, use both  
            word-wrap: break-word;
            overflow-wrap: break-word;
        }
    }

    &-light {
        &.#{$module}-warning {
            .#{$module}-content {
                background-color: variables.$color-toast_warning_light-bg;
                border: variables.$width-toast_light-border solid variables.$color-toast_warning_light-border;
            }
            .#{$icon}-warning {
                color: variables.$color-toast_warning_light-icon;
            }
        }

        &.#{$module}-success {
            .#{$module}-content {
                background-color: variables.$color-toast_success_light-bg;
                border: variables.$width-toast_light-border solid variables.$color-toast_success_light-border;
            }
            .#{$icon}-success {
                color: variables.$color-toast_success_light-icon;
            }
        }

        &.#{$module}-info {
            .#{$module}-content {
                background-color: variables.$color-toast_info_light-bg;
                border: variables.$width-toast_light-border solid variables.$color-toast_info_light-border;
            }
            .#{$icon}-info {
                color: variables.$color-toast_info_light-icon;
            }
        }

        &.#{$module}-error {
            .#{$module}-content {
                background-color: variables.$color-toast_danger_light-bg;
                border: variables.$width-toast_light-border solid variables.$color-toast_danger_light-border;
            }
            .#{$icon}-error {
                color: variables.$color-toast_danger_light-icon;
            }
        }
    }

    .#{$icon}-warning {
        color: variables.$color-toast_warning-icon;
    }

    .#{$icon}-success {
        color: variables.$color-toast_success-icon;
    }

    .#{$icon}-info {
        color: variables.$color-toast_info-icon;
    }

    .#{$icon}-error {
        color: variables.$color-toast_danger-icon;
    }

    &-animation-show{
        animation: animation.$animation_duration-toast-show #{$module}-keyframe-toast-show animation.$animation_function-toast-show animation.$animation_delay-toast-show ;
        animation-fill-mode: forwards;
    }

    &-animation-hide{
        animation: animation.$animation_duration-toast-hide #{$module}-keyframe-toast-hide animation.$animation_function-toast-hide animation.$animation_delay-toast-hide ;
        animation-fill-mode: forwards;
    }

    @keyframes #{$module}-keyframe-toast-show{
        0%{
            opacity: animation.$animation_opacity-toast-show;
            transform: translateY(animation.$animation_transform_translateY-toast-show);
        }
        100%{
            opacity: 1;
        }
    }

    @keyframes #{$module}-keyframe-toast-hide{
        0%{
            opacity: 1;
        }
        100%{
            opacity: animation.$animation_opacity-toast-hide;
            transform: translateY(animation.$animation_transform_translateY-toast-hide);
        }
    }

}

@include meta.load-css("rtl.scss");
