@use "sass:meta";
@use 'variables.scss';

$module: #{$prefix}-tree-select;

.#{$module} {
    box-sizing: border-box;
    border-radius: variables.$radius-treeSelect;
    border: variables.$width-treeSelect-border solid variables.$color-treeSelect_default-border-default;
    min-width: variables.$width-treeSelect_default;
    min-height: variables.$height-treeSelect_default;
    line-height: variables.$font-treeSelect_default-lineHeight;
    font-weight: variables.$font-treeSelect_default-fontWeight;
    background-color: variables.$color-treeSelect_default-bg-default;
    display: inline-flex;
    align-items: center;
    position: relative;
    cursor: pointer;


    &:hover {
        background-color: variables.$color-treeSelect_default-bg-hover;
        border: variables.$width-treeSelect_hover-border solid variables.$color-treeSelect_default-border-hover;
    }

    // &:focus {
    //     border: $width-treeSelect_focus-border solid $color-treeSelect_default-border-focus;
    //     background-color: $color-treeSelect_default-bg-focus;
    //     outline: 0;
    // }

    &:active{
        background-color: variables.$color-treeSelect_default-bg-active;
    }


    &-focus {
        background-color: variables.$color-treeSelect_default-bg-focus;
        border: variables.$width-treeSelect_focus-border solid variables.$color-treeSelect_default-border-focus;
        outline: 0;

        &:hover {
            background-color: variables.$color-treeSelect_default-bg-focus;
            border: variables.$width-treeSelect_focus-border solid variables.$color-treeSelect_default-border-focus;
            outline: 0;
        }


        &:active{
            background-color: variables.$color-treeSelect_default-bg-active;
        }
    }


    &-warning {
        background-color: variables.$color-treeSelect_warning-bg-default;
        border-color: variables.$color-treeSelect_warning-border-default;

        &:hover {
            background-color: variables.$color-treeSelect_warning-bg-hover;
            border-color: variables.$color-treeSelect_warning-border-hover;
        }

        &.#{$module}-focus {
            background-color: variables.$color-treeSelect_warning-bg-focus;
            border-color: variables.$color-treeSelect_warning-border-focus;
        }

        &:active {
            background-color: variables.$color-treeSelect_warning-bg-active;
            border-color: variables.$color-treeSelect_warning-border-active;
        }
    }

    &-error {
        background-color: variables.$color-treeSelect_danger-bg-default;
        border-color: variables.$color-treeSelect_danger-border-default;

        &:hover {
            background-color: variables.$color-treeSelect_danger-bg-hover;
            border-color: variables.$color-treeSelect_danger-border-hover;
        }

        &.#{$module}-focus {
            background-color: variables.$color-treeSelect_danger-bg-focus;
            border-color: variables.$color-treeSelect_danger-border-focus;
        }

        &:active {
            background-color: variables.$color-treeSelect_danger-bg-active;
            border-color: variables.$color-treeSelect_danger-border-active;
        }
    }

    &-disabled {
        cursor: not-allowed;
        user-select: none;

        background-color: variables.$color-treeSelect_input_disabled-bg-default;
        // border: 1px solid $color-treeSelect_input_disabled-border-default;

        &:hover {
            background-color: variables.$color-treeSelect_input_disabled-bg-hover;
        }

        .#{$module}-selection,
        .#{$module}-selection-placeholder {
            color: variables.$color-treeSelect_input_disabled-text-default;
            cursor: not-allowed;
        }

        .#{$module}-arrow,
        .#{$module}-prefix,
        .#{$module}-suffix {
            color: variables.$color-treeSelect_input_disabled-text-default;
        }

        .#{$prefix}-tag {
            color: variables.$color-treeSelect_input_disabled-text-default;
            background-color: variables.$color-treeSelect_tag_disabled-bg-default;
        }
    }

    &-selection {
        @include font-size-regular;

        height: 100%;
        display: inline-flex;
        align-items: center;
        flex-wrap: wrap;
        flex-grow: 1;
        overflow: hidden;
        padding-left: variables.$spacing-treeSelect_selection-paddingLeft;
        padding-right: 0;
        cursor: pointer;
        color: variables.$color-treeSelect_selection-text-default;
        position: relative;

        &-content {
            overflow: hidden;
            white-space: nowrap;
            text-overflow: ellipsis;
        }
        
        &-placeholder {
            color: variables.$color-treeSelect_input_placeholder-text-default;
        }

        .#{$prefix}-tag-group {
            height: inherit;
            display: inline-flex;
            align-items: center;
            flex-wrap: wrap;
        }

        .#{$prefix}-tag {
            margin: variables.$spacing-treeSelect_tag-marginY variables.$spacing-treeSelect_tag-marginX;
        }

        &-TriggerSearchItem {
            position: absolute;
            max-width: calc(100% - variables.$spacing-treeSelect_selection-paddingLeft);
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;
            
            &-placeholder {
                opacity: .6;
            }

            &-disabled {
                cursor: not-allowed;
                color: variables.$color-treeSelect_selection_TriggerSearchItem_disabled-text-default;
            }
        }

        .#{$module}-triggerSingleSearch-upper {
            z-index: 1;
        }

        .#{$module}-triggerSingleSearch-wrapper{
            width: 100%;

            .#{$module}-inputTrigger {
                .#{$prefix}-input-wrapper {
                    background: transparent;
                }
            }

            // Same as Cascader, covering part of the style of semi Input component
            // 这里和 cascader 相同, 覆盖 semi Input 的部分内置样式
            .#{$prefix}-input-wrapper {
                height: 100%;
                width: 100%;
                border: variables.$color-treeSelect_inputTrigger-border-default;
                background-color: variables.$color-treeSelect_inputTrigger-bg-default;
            }

            .#{$prefix}-input-wrapper-focus {
                border: variables.$color-treeSelect_inputTrigger-border-default;
            }

            .#{$prefix}-input {
                padding-left: 0;
                padding-right: 0;
            }
        }

        .#{$prefix}-tagInput {
            border: hidden;
            background: transparent;
            min-height: variables.$height-treeSelect_selection_tagInput_wrapper_default;

            &-small {
                min-height: variables.$height-treeSelect_selection_tagInput_wrapper_small;
            }

            &-large {
                min-height: variables.$height-treeSelect_selection_tagInput_wrapper_large;
            }

            .#{$prefix}-tagInput-wrapper {
                padding-left: variables.$spacing-treeSelect_selection_tagInput_wrapper-paddingX;
                padding-right: variables.$spacing-treeSelect_selection_tagInput_wrapper-paddingX;

                .#{$prefix}-input-wrapper {
                    // height: $height-treeSelect_selection_tagInput_input_default;

                    .#{$prefix}-input {
                        padding-left: 0;
                    }

                    &-default {
                        margin-top: variables.$spacing-treeSelect_tag-marginY;
                        margin-bottom: variables.$spacing-treeSelect_tag-marginY;
                    }
        
                    &-large {
                        margin-top: variables.$spacing-treeSelect_tag-marginY;
                        margin-bottom: variables.$spacing-treeSelect_tag-marginY;
                    }
                }
            }
        }
    }
    
    &-multiple-tagInput-notEmpty {
        .#{$prefix}-tagInput {
            margin-left: variables.$spacing-treeSelect_selection_tagInput_notEmpty-marginLeft;
        }
    }


    &-multiple-tagInput-empty {
        .#{$prefix}-tagInput {
            margin-left: variables.$spacing-treeSelect_selection_tagInput_empty-marginLeft;
        }
    }

    &-multiple {
        display: inline-flex;

        .#{$module}-selection {
            padding-left: variables.$spacing-treeSelect_selection_multiple-paddingLeft;
            padding-right: 0;

            &-placeholder {
                padding-left: variables.$spacing-treeSelect_placeholder_multiple-paddingLeft;
            }
        }
    }

    &-small {
        min-height: variables.$height-treeSelect_small;
        line-height: variables.$font-treeSelect_small-lineHeight;
    }

    &-large {
        min-height: variables.$height-treeSelect_large;
        line-height: variables.$font-treeSelect_large-lineHeight;
        .#{$module}-selection {
            @include font-size-header-6;
        }
    }

    &-arrow {
        // position: absolute;
        // top: 0;
        // right: 0;
        display: inline-flex;
        align-items: center;
        flex-shrink: 0;
        height: 100%;
        justify-content: center;
        width: variables.$width-treeSelect_arrow;
        color: variables.$color-treeSelect_default-icon-default;
    }

    &-inset-label {
        display: inline;
        margin: variables.$spacing-treeSelect_prefix_text-marginY variables.$spacing-treeSelect_prefix_text-marginX;
        font-weight: variables.$font-treeSelect_prefix_suffix_fontWeight;
        @include font-size-regular;
        color: variables.$color-treeSelect_prefix_suffix_text-default;
        flex-shrink: 0;
        white-space: nowrap;
    }

    &.#{$module}-with-prefix {
        display: inline-flex;
        align-items: center;
    }

    &-arrow,
    &-clearbtn {
        display: inline-flex;
        align-items: center;
        height: 100%;
        flex-shrink: 0;
        justify-content: center;
        width: variables.$width-treeSelect_arrow;
        color: variables.$color-treeSelect_default-icon-default;
    }

    &-clearbtn {
        &:hover {
            color: variables.$color-treeSelect_default-icon-hover;
        }

        &:active {
            color: variables.$color-treeSelect_default-icon-active;
        }
    }

    &-prefix,
    &-suffix {
        display: inline;
        @include all-center;

        &-text {
            color: variables.$color-treeSelect_prefix_suffix_text-default;
            font-weight: variables.$font-treeSelect_prefix_suffix_fontWeight;
            @include font-size-regular;
            margin: variables.$spacing-treeSelect_prefix_text-marginY variables.$spacing-treeSelect_prefix_text-marginX;
        }

        &-icon {
            color: variables.$color-treeSelect_default-icon-default;
            margin: variables.$spacing-treeSelect_prefix_icon-marginY variables.$spacing-treeSelect_prefix_icon-marginX;
        }

        &.#{$module}-with-suffix {
            .#{$module}-selection {
                padding-right: variables.$spacing-treeSelect_selection_withSuffix-paddingRight;
            }
        }

        &-search-wrapper {
            padding: variables.$spacing-treeSelect_search_wrapper-paddingY variables.$spacing-treeSelect_search_wrapper-paddingX;
            border-bottom: variables.$width-treeSelect_search_wrapper-border solid variables.$color-treeSelect_search-border-default;
        }

        &-maxTagCount {
            color: variables.$color-treeSelect_input_placeholder-text-default;
            font-size: variables.$font-treeSelect_default-fontSize;
        }

        &-popover {
            max-height: variables.$height-treeSelect_popover;
            overflow: auto;
        }
    }
}
.#{$module}-popover {
    .#{$prefix}-tree-wrapper {
        height: 100%;
        display: flex;
        flex-direction: column;

        .#{$prefix}-tree-option-list {
            flex: 1;
            min-width: variables.$width-treeSelect_option;

            &-hidden {
                padding: 0;
            }
        }

        .#{$prefix}-tree-search-wrapper {
            border-bottom: variables.$width-treeSelect_search_wrapper-border variables.$color-treeSelect_search-border-default solid;
        }
    }
}

.#{$module}-borderless{

    &:not(:focus-within):not(:hover){
        background-color:transparent;
        border-color: transparent;
        .#{$module}-arrow {
            opacity: 0;
        }
    }

    &:focus-within:not(:active){
        background-color:transparent;
    }

    // split style into not and normal to avoid style override
    &.#{$module}-error:not(:focus-within){
        border-color: variables.$color-treeSelect_danger-border-focus;
    }

    &.#{$module}-warning:not(:focus-within){
        border-color: variables.$color-treeSelect_warning-border-focus;
    }

    &.#{$module}-error:focus-within{
        border-color: variables.$color-treeSelect_danger-border-focus;
    }

    &.#{$module}-warning:focus-within{
        border-color: variables.$color-treeSelect_warning-border-focus;
    }

}

@include meta.load-css('rtl.scss');
