//@import '../theme/variables.scss';
@use "sass:meta";
@use "animation.scss";
@use 'variables.scss';
@use 'option.scss';
@use 'mixin.scss';

option.$module: #{$prefix}-select;
option.$single: #{option.$module}-single;
option.$filterable: #{option.$module}-filterable;
option.$multiple: #{option.$module}-multiple;
$overflowList: #{$prefix}-overflow-list;

.#{option.$module} {
    box-sizing: border-box;
    border-radius: variables.$radius-select;
    border: variables.$width-select-border solid variables.$color-select-border-default;
    height: variables.$height-select_default;
    font-weight: variables.$font-select-fontWeight;
    background-color: variables.$color-select-bg-default;
    // display: inline-block;
    display: inline-flex;
    vertical-align: middle;
    position: relative;
    outline: none;
    cursor: pointer;
    transition: background-color animation.$transition_duration-select-bg animation.$transition_function-select-bg animation.$transition_delay-select-bg, border animation.$transition_duration-select-border animation.$transition_function-select-border animation.$transition_delay-select-border;
    transform: scale(animation.$transform_scale-select);

    max-height: 300px;
    overflow-y: auto;

    &:hover {
        background-color: variables.$color-select-bg-hover;
        border: variables.$width-select-border-hover solid variables.$color-select-border-hover;
    }

    &:focus {
        border: variables.$width-select-border-focus solid variables.$color-select-border-focus;
        background-color: variables.$color-select-bg-focus;
        // background-color: plum;
        outline: 0;
    }

    &:active{
        background-color: variables.$color-select-bg-active;
    }

    &-small {
        height: variables.$height-select_small;
        line-height: variables.$height-select_small;
    }

    &-large {
        min-height: variables.$height-select_large;
        line-height: variables.$height-select_large;
        .#{option.$module}-selection {
            @include font-size-header-6;
        }
    }

    &-open,
    &-focus {
        border: variables.$width-select-border-focus solid variables.$color-select_default-border-focus;
        outline: 0;

        &:hover {
            background-color: variables.$color-select-bg-default;
            border: variables.$width-select-border-hover solid variables.$color-select_default-border-focus;
        }

        // when click the trigger, trigger get the focus state, active style should take effect
        &:active {
            background-color: variables.$color-select-bg-active;
            border: variables.$width-select-border-active solid variables.$color-select-border-active;
        }
    }

    &-warning {
        background-color: variables.$color-select_warning-bg-default;
        border-color: variables.$color-select_warning-border-default;

        &:hover {
            background-color: variables.$color-select_warning-bg-hover;
            border-color: variables.$color-select_warning-border-hover;
        }

        &:focus {
            background-color: variables.$color-select_warning-bg-focus;
            border-color: variables.$color-select_warning-border-focus;
        }

        &:active {
            background-color: variables.$color-select_warning-bg-active;
            border-color: variables.$color-select_warning-border-active;
        }
    }

    &-error {
        background-color: variables.$color-select_danger-bg-default;
        border-color: variables.$color-select_danger-border-default;

        &:hover {
            background-color: variables.$color-select_danger-bg-hover;
            border-color: variables.$color-select_danger-border-hover;
        }

        &:focus {
            background-color: variables.$color-select_danger-bg-focus;
            border-color: variables.$color-select_danger-border-focus;
        }

        &:active {
            background-color: variables.$color-select_danger-bg-active;
            border-color: variables.$color-select_danger-border-active;
        }
    }

    &-disabled {
        cursor: not-allowed;
        background-color: variables.$color-select_input_disabled-bg;
        // border: 1px solid $color-select_input_disabled-border;

        &:hover {
            background-color: variables.$color-select_input_disabled-bg-hover;
        }

        &:focus {
            // when select is disabled, the border should not have active color
            border: variables.$width-select-border-focus solid variables.$color-select_input_disabled-border-focus;
            background-color: variables.$color-select_input_disabled-bg-focus;
        }

        .#{option.$module}-selection,
        .#{option.$module}-selection-placeholder {
            color: variables.$color-select_input_disabled-text;
            cursor: not-allowed;
        }

        .#{option.$module}-arrow,
        .#{option.$module}-prefix,
        .#{option.$module}-suffix {
            color: variables.$color-select_input_disabled-text;
        }

        .#{$prefix}-tag {
            color: variables.$color-select_input_disabled-text;
            background-color: transparent;
        }
    }

    &-selection {
        @include font-size-regular;

        height: 100%;

        display: flex;
        align-items: center;
        flex-grow: 1;
        overflow: hidden;

        margin-left: variables.$spacing-select_selection-marginLeft;
        // margin-right: $width-select_icon_right;

        cursor: pointer;
        color: variables.$color-select_main-text-default;

        &-text {
            // display: inline-flex;
            // align-items: center;
            // height: 100%;
            width: 100%;
            overflow: hidden;
            text-overflow: ellipsis;

            &-inactive {
                display: flex;
                opacity: variables.$opacity-select_selection_text_inactive;
            }

            &-hide {
                display: none;
            }
        }

        &-placeholder {
            color: variables.$color-select_input_placeholder-text;
        }

        .#{$prefix}-tag {
            @include mixin.select-tag-margin;

            &:nth-of-type(1) {
                margin-left: 0;
            }
        }

        .#{$prefix}-tag-group {
            height: inherit;
            .#{$prefix}-tag {
                @include mixin.select-tag-margin;
            }
        }
    }

    &-content-wrapper {
        white-space: nowrap;
        overflow: hidden;
        display: flex;
        align-items: center;
        height: 100%;

        &-collapse {
            display: inline-flex;
            flex-shrink: 0;
            width: 100%;

            .#{$overflowList}-overflow {
                max-width: 100%; // when one tag exceed the max width
                min-width: 50px;
            }

            &>&-tag {
                background-color: transparent;
            }

            &>&-N {
                background-color: transparent;
                padding: 4px;
                color: var(--semi-color-text-0);
                font-size: 12px;
            }
        }
    }

    &-multiple {
        // 这里要设置为 auto，可能存在换行
        height: auto;

        .#{option.$module}-selection {
            margin-left: variables.$spacing-select_multiple_selection-marginLeft;
            // &-placeholder {
            //     padding-left: $spacing-base-tight - $spacing-extra-tight;
            // }
        }

        .#{option.$module}-content-wrapper {
            width: 100%;
            min-height: variables.$height-select_default - 2 * variables.$width-select-border ;
            flex-wrap: wrap;

            &-empty {
                margin-left: variables.$spacing-select_multiple_content_wrapper_empty-marginLeft;
            }

            .#{$prefix}-tag-group {
                display: flex;
                align-items: center;
            }

            &-one-line {
                flex-wrap: nowrap;

                .#{$prefix}-tag-group {
                    flex-wrap: nowrap;
                    justify-content: flex-start;
                    overflow: hidden;
                    flex-shrink: 0;
                }
            }
        }

        .#{option.$module}-inline-label-wrapper {
            flex-shrink: 0;
        }
    }

    &-multiple.#{option.$module}-large {
        .#{option.$module}-content-wrapper {
            min-height: variables.$height-select_large - 2 * variables.$width-select-border;
        }
    }

    &-multiple.#{option.$module}-small {
        .#{option.$module}-content-wrapper {
            min-height: variables.$height-select_small - 2 * variables.$width-select-border;
        }
    }

    &-arrow {
        display: flex;
        align-items: center;
        justify-content: center;
        width: variables.$width-select_arrow;
        color: variables.$color-select-icon-default;
        flex-shrink: 0;
        transform: rotate(animation.$transform_rotate-select-arrow);


        &-empty {
            // 不显示arrow时，右侧留出12px空白
            display: flex;
            width: variables.$width-select_arrow_empty;
        }
    }

    &-prefix,
    &-suffix {
        @include all-center;

        &-text {
            margin: variables.$spacing-select_prefix_suffix_text-marginY variables.$spacing-select_prefix_suffix_text-marginX;
            color: variables.$color-select_prefix_suffix_text-default;
            @include font-size-regular;
            font-weight: variables.$font-select_prefix_suffix-fontWeight;
        }

        &-icon {
            color: variables.$color-select-icon-default;
            margin: variables.$spacing-select_prefix_suffix_icon-marginY variables.$spacing-select_prefix_suffix_icon-marginX;
        }
    }

    &-suffix {
        @include all-center;
    }

    &-clear {
        @include all-center;
        width: variables.$width-select_clear-icon;
        color: variables.$color-select_clearBtn-text-default;
        flex-shrink: 0;
        &:hover {
            color: variables.$color-select_clearBtn-text-hover;
        }
    }

    &-inset-label-wrapper {
        display: inline;
    }

    &-inset-label {
        margin: variables.$spacing-select_prefix_suffix_text-marginY variables.$spacing-select_prefix_suffix_text-marginX;
        font-weight: variables.$font-select_prefix_suffix-fontWeight;
        @include font-size-regular;
        color: variables.$color-select_prefix_suffix_text-default;
        flex-shrink: 0;
        white-space: nowrap;
    }

    &-create-tips {
        color: variables.$color-select_create_tips-text;
        margin-right: variables.$spacing-select_create_tips-marginRight;
    }
}

.#{option.$module}-with-prefix {
    .#{option.$module}-selection {
        margin-left: 0;
    }
}

// 单选且可输入
.#{option.$single}.#{option.$filterable} {
    .#{option.$module}-content-wrapper {
        flex-grow: 1;
        height: 100%;
        overflow: hidden;
        position: relative;
    }

    .#{$prefix}-input-wrapper {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        border: none;
        background-color: transparent;
    }

    .#{$prefix}-input-wrapper-focus {
        border: none;
    }

    .#{$prefix}-input {
        padding-left: 0;
        padding-right: 0;
        height: 100%; // 自定义renderSelectedItem时，Select的整体高度可能不是默认的32px
    }
}

// 多选且可输入
.#{option.$multiple}.#{option.$filterable} {
    .#{option.$module}-content-wrapper {
        flex-grow: 1;
        height: 100%;
        overflow: hidden;
        position: relative;

        &:not(.#{option.$module}-content-wrapper-empty) {
            .#{$prefix}-input-wrapper {
                height: variables.$height-select_multiple_input_default;
                line-height: variables.$height-select_multiple_input_default;
                .#{$prefix}-input-default {
                    height: variables.$height-select_multiple_input_default;
                }
            }
        }

        &-empty {
            .#{$prefix}-input-wrapper {
                position: absolute;
                top: 0;
                left: 0;
                height: 100%;
                .#{$prefix}-input-default {
                    height: 100%;
                }
                // width: 100%; // no need to set width here, will calcuate inline style by js
            }
        }
    }
    .#{$prefix}-input-wrapper {
        // position: absolute;
        // top: 0;
        // left: 0;
        height: 100%;
        width: 100%;
        border: none;
        background-color: transparent;
    }

    .#{$prefix}-input-wrapper-focus {
        border: none;
    }

    .#{$prefix}-input {
        padding-left: 0;
        padding-right: 0;
    }
}

.#{option.$multiple}.#{option.$filterable}.#{option.$module}-large {
    .#{option.$module}-content-wrapper {
        &:not(.#{option.$module}-content-wrapper-empty) {
            .#{$prefix}-input-wrapper-large {
                height: variables.$height-select_multiple_input_large;
                line-height: variables.$height-select_multiple_input_large;
                .#{$prefix}-input-large {
                    height: variables.$height-select_multiple_input_large
                }
            }
        }
    }
}

.#{option.$multiple}.#{option.$filterable}.#{option.$module}-small {
    .#{option.$module}-content-wrapper {
        &:not(.#{option.$module}-content-wrapper-empty) {
            .#{$prefix}-input-wrapper {
                height: variables.$height-select_multiple_input_small;
                line-height: variables.$height-select_multiple_input_small;
                .#{$prefix}-input-small {
                    height: variables.$height-select_multiple_input_small;
                }
            }
        }
    }
}


.#{option.$module}-option-list-wrapper {
    padding-top: variables.$spacing-select_option_list-paddingTop;
    padding-bottom: variables.$spacing-select_option_list-paddingBottom;
    padding-left: variables.$spacing-select_option_list-paddingLeft;
    padding-right: variables.$spacing-select_option_list-paddingRight;
}

.#{option.$module}-option-list {
    overflow-x: hidden;
    overflow-y: auto;
    &-chosen {
        .#{option.$module}-option-icon {
            display: flex;
        }
    }
}

.#{option.$module}-group {
    color: variables.$color-select_group-text;
    padding-top: variables.$spacing-select_group-paddingTop;
    margin-top: variables.$spacing-select_group-marginTop;
    padding-bottom: variables.$spacing-select_group-paddingBottom;
    padding-left: variables.$spacing-select_group-paddingLeft;
    padding-right: variables.$spacing-select_group-paddingRight;
    @include font-size-small;
    cursor: default;

    // &:nth-of-type(1) {
    //     margin-top: $spacing-extra-tight;
    // }

    &:not(:nth-of-type(1)) {
        border-top: variables.$width-select_group_top-border solid variables.$color-select_option-border-default;
    }
}


.#{option.$module}-loading-wrapper {
    padding-left: variables.$spacing-select_loading_wrapper-paddingLeft;
    padding-right: variables.$spacing-select_loading_wrapper-paddingRight;
    padding-top: variables.$spacing-select_loading_wrapper-paddingTop;
    padding-bottom: variables.$spacing-select_loading_wrapper-paddingBottom;
    cursor: not-allowed;
    // make sure that spin align vertical, no need to make 20px as a spacing token here
    height: 20px;
    box-sizing: content-box;
}


.#{option.$module}-borderless {

    &:not(:focus-within):not(:hover){
        background-color:transparent;
        border-color: transparent;
        .#{option.$module}-arrow {
            opacity: 0;
        }
    }

    &:focus-within:not(:active){
        background-color:transparent;
    }

    // split style into not and normal to avoid style override
    &.#{option.$module}-error:not(:focus-within){
        border-color: variables.$color-select_danger-border-focus;
    }

    &.#{option.$module}-warning:not(:focus-within){
        border-color: variables.$color-select_warning-border-focus;
    }

    &.#{option.$module}-error:focus-within{
        border-color: variables.$color-select_danger-border-focus;
    }

    &.#{option.$module}-warning:focus-within{
        border-color: variables.$color-select_warning-border-focus;
    }

}


.#{option.$module}-dropdown-search-wrapper {
    padding-top: variables.$spacing-select_dropdown_input_paddingTop;
    padding-right: variables.$spacing-select_dropdown_input_paddingRight;
    padding-bottom: variables.$spacing-select_dropdown_input_paddingBottom;
    padding-top: variables.$spacing-select_dropdown_input_paddingTop;
    padding-left: variables.$spacing-select_dropdown_input_paddingLeft;
    border-bottom: 1px solid variables.$color-select_dropdown_input-border;
}

@include meta.load-css('rtl.scss');
